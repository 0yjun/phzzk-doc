Table users {
  id          integer [primary key]   // 유저 고유 ID
  username    varchar                 // 유저 이름
  role        varchar                 // 유저 역할 (예: 스트리머, 시청자 등)
  created_at  timestamp               // 계정 생성 일자
}

Table channels {
  id           integer [primary key]   // 채널 고유 ID
  user_id      integer                  // 유저 ID (1:1 관계, 채널은 하나의 유저에 속함)
  name         varchar                  // 채널 이름
  description  text                     // 채널 설명
  created_at   timestamp                // 채널 생성 일자
}

Ref: channels.user_id > users.id  // 1:1 관계 (채널은 하나의 유저에 속함)

Table live_streaming {
  id                integer [primary key]  // 방송 고유 ID
  channel_id        integer                // 방송이 속한 채널 ID (1:N 관계)
  status            varchar                // 방송 상태: init, online, offline
  created_at        timestamp              // 방송 생성 일자
  updated_at        timestamp              // 방송 업데이트 일자
}

Ref: live_streaming.channel_id > channels.id  // 1:N 관계 (채널은 여러 방송을 가질 수 있음)

Table live_streaming_settings {
  id                  integer [primary key]   // 방송 설정 고유 ID
  livestream_id       integer                  // 방송에 연결된 설정
  title               varchar                  // 방송 제목 (스트리머가 설정한 제목)
  category            varchar                  // 방송 카테고리
  thumbnail_image_url varchar                  // 썸네일 이미지 URL
  tags                varchar[]               // 태그 리스트 (최대 5개)
  replay_publish_type varchar                  // 다시보기 게시 설정 (MANUAL, AUTO, NONE)
  clip_active         boolean                 // 클립 활성화 여부
  adult               boolean                 // 연령 제한 여부
  kr_only_viewing     boolean                 // 한국에서만 시청 가능 여부
  created_at          timestamp               // 설정 생성 일자
}

Ref: live_streaming_settings.livestream_id > live_streaming.id  // 1:1 관계 (방송 1:1 방송 설정)

Table videos {
  id              integer [primary key]   // 비디오 ID
  channel_id      integer                  // 채널 ID (외래 키)
  livestreaming_id integer                 // 방송 ID (외래 키, 방송을 통한 비디오일 경우 연결됨)
  user_id         integer                  // 업로드한 유저 ID (스트리머가 직접 업로드한 비디오일 경우 연결됨)
  video_url       varchar                  // 비디오 URL (스트리밍 또는 업로드된 동영상)
  video_type      varchar                  // 비디오 타입 ("LIVE_STREAM" 또는 "UPLOAD")
  title           varchar                  // 비디오 제목
  thumbnail_image varchar                  // 썸네일 이미지 URL
  like_count      integer                  // 좋아요 수
  created_at      timestamp                // 비디오 업로드/생성 일자
  duration        integer                  // 비디오 길이
  deleted         boolean                  // 삭제 여부
}

Ref: videos.channel_id > channels.id     // 채널과 비디오의 관계 (1:n) 실시간방송 비디오
Ref: videos.livestreaming_id > live_streaming.id  // 방송과 비디오의 관계 (1:1) 실시간방송 비디오
Ref: videos.user_id > users.id           // 유저와 비디오의 관계 (1:n) 업로드 비디오
Table chat_rules {
  id          integer [primary key]   // 채팅 규칙 고유 ID
  channel_id  integer                  // 채널 ID
  rule        text                     // 채팅 규칙 (예: 예쁜 말 써주세요)
  created_at  timestamp                // 규칙 생성 일자
}

Ref: chat_rules.channel_id > channels.id // 1:N 관계 (채널은 여러 채팅 규칙을 가질 수 있음)

Table prohibit_words {
  prohibit_word_no  integer [primary key]  // 금칙어 고유 번호
  prohibit_word     varchar                 // 금칙어
  created_date      timestamp               // 금칙어 생성 일자
  nickname          varchar                 // 금칙어 작성자
  channel_id        integer                 // 금칙어가 속한 채널
}

Ref: prohibit_words.channel_id > channels.id // 1:N 관계 (채널은 여러 금칙어를 가질 수 있음)

Table follows {
  following_user_id  integer               // 팔로우하는 유저의 ID
  followed_user_id   integer               // 팔로우 당하는 유저의 ID
  created_at         timestamp             // 팔로우 생성 일자
}

Ref: follows.following_user_id > users.id  // 팔로우하는 유저 (1:N 관계)
Ref: follows.followed_user_id > users.id   // 팔로우 당하는 유저 (1:N 관계)

Table live_streaming_likes {
  user_id         integer               // 좋아요를 누른 유저 ID
  livestream_id   integer               // 좋아요를 누른 방송 ID
  created_at      timestamp             // 좋아요 눌린 시간
  PRIMARY KEY (user_id, livestream_id)       // 복합키로 유저 ID와 방송 ID를 유일하게
}

Ref: live_streaming_likes.user_id > users.id      // 유저가 방송에 좋아요를 눌렀다는 관계
Ref: live_streaming_likes.livestream_id > live_streaming.id  // 방송에 좋아요가 눌러졌다는 관계

Table comments {                         // 동영상 댓글
  user_id         integer               // 동영상  댓글을 작성한 유저 ID
  video_no   integer               // 동영상 댓글 누른 비디오 ID
  created_at      timestamp             // 동영상 댓글 눌린 시간
  PRIMARY KEY (user_id, vedeo_no1)       // 복합키로 유저 ID와 비디오 ID를 유일하게
}

Ref: comments.user_id > users.id      // 유저 동영상댓글 관계
Ref: comments.video_no > videos.id  //  동영상 동영상댓글 관계

Table chats {
  id                bigint [primary key]   // 채팅 ID (자동 증가)
  livestreaming_id  bigint                 // 방송 ID (외래 키)
  user_id           varchar                // 채팅 작성자 ID (외래 키)
  content           text                   // 채팅 내용
  member_count      integer                // 당시 시청자 수
  created_at        timestamp              // 채팅 생성 시간
}

Ref: chats.livestreaming_id > live_streaming.id  // 채팅과 방송(livestreaming)의 관계
Ref: chats.user_id > users.id                  // 채팅과 사용자(users)의 관계

Table profiles {
  id               bigint [primary key]  // 프로필 ID (자동 증가)
  user_id          bigint                // 유저 ID (외래 키)
  nickname         varchar               // 닉네임
  profile_image_url varchar              // 프로필 이미지 URL
  user_role_code   varchar               // 유저 권한 코드
  badge            varchar               // 배지 정보
  title            varchar               // 타이틀
  verified_mark    boolean               // 인증 마크
  activity_badges  text                  // 활동 배지 (JSON 형식)
  streaming_property json                // 스트리밍 관련 속성 (JSON 형식)
  created_at       timestamp             // 프로필 생성 시간
  updated_at       timestamp             // 프로필 업데이트 시간
}

Ref: profiles.user_id > users.id   // 프로필과 유저의 관계 (1:1 관계)
